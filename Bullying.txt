import tensorflow
import keras
import pandas as pd 
import seaborn as sns
import numpy as np
from sklearn.utils import resample
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import StandardScaler
from keras.models import Sequential
from keras.layers import Dense
nn_classifier = Sequential()
data = pd.read_csv('data.csv')
data.replace(to_replace ='bullying' ,value= 1 ,inplace =True)
data.replace(to_replace ='noneBll' ,value= 0 ,inplace =True)
data['bully'].value_counts()
min = data[data['bully'] == 1]
maj = data[data['bully'] == 0]
update_text = resample(min , replace = True , n_samples = 569 , random_state = 132)
data = pd.concat([maj,update_text])
data['bully'].value_counts()
X_data = data.drop('bully' , axis =1)
y_data = data['bully']
X_train , X_test , y_train , y_test = train_test_split(X_data , y_data , test_size = 0.3 , random_state =123)
Sc_x = StandardScaler()
X_train = Sc_x.fit_transform(X_train)
X_test = Sc_x.fit_transform(X_test)
nn_classifier1 = Sequential()
nn_classifier1.add(Dense(output_dim=6,init='uniform',activation='relu',input_dim=36))
nn_classifier1.add(Dense(output_dim=6,init='uniform',activation='relu'))
nn_classifier1.add(Dense(output_dim=1,init='uniform',activation='sigmoid'))
nn_classifier1.compile(optimizer='adam', loss = 'binary_crossentropy',metrics=['accuracy'])
nn_classifier1.fit(X_train,y_train,batch_size=10,epochs=1000)